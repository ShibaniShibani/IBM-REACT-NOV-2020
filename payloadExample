<!DOCTYPE html>

<html lang="en">

<head>

    <meta charset="UTF-8">

    <meta name="viewport" content="width=device-width, initial-scale=1.0">

    <meta http-equiv="X-UA-Compatible" content="ie=edge">

    <title>Products</title>

    <script src="https://unpkg.com/react@16/umd/react.production.min.js"></script>
    <script src="stateManager.js"></script>
    <script src="https://unpkg.com/react-dom@16/umd/react-dom.production.min.js"></script>
    <script src="https://unpkg.com/babel-standalone@6.15.0/babel.min.js"></script>

    <script type="text/babel">

        class Spinner extends React.Component {

            incDecVal

            onDecrementClick = () => {

                this.props.store.dispatch({ type: 'DECREMENT' ,payload: this.incDecVal });

            };



            onIncrementClick = () => {

                this.props.store.dispatch({ type: 'INCREMENT' , payload: this.incDecVal });

            };



            render() {
                
                const { store } = this.props,

                    value = store.getState();

                return (

                    <div>

                        <h3>Spinner</h3>

                        <hr />

                        <label>Delta : </label>
                        <input type="number"   onChange={ evt => { this.incDecVal = parseInt(evt.target.value)}}/>
                  
                        <input type="button" value="DECREMENT" onClick={this.onDecrementClick} />

                        <span> [ {value} ] </span>

                        <input type="button" value="INCREMENT" onClick={this.onIncrementClick} />

                    </div>

                )

            }

        }


        function spinnerReducer(currentState = 0, action) {

            if (action.type === 'INCREMENT') return currentState + (action.payload || 1);

            if (action.type === 'DECREMENT') return currentState - (action.payload || 1);

            return currentState;

        }

        const store = StateManager.createStore(spinnerReducer);

        function renderSpinner() {

            ReactDOM.render(

                <Spinner store={store} />

                , document.getElementById('root'));

        }

        renderSpinner();

        store.subscribe(renderSpinner);

    </script>

</head>

<body>

    <div id="root">

    </div>

</body>

</html>
